from google.protobuf.descriptor import FieldDescriptor
from typing import Any, List, Union

def update_protobuf_value(message: Any, path: Union[str, List[str]], new_value: Any) -> bool:
    """
    Update a value in a protobuf message using a path string or list of path components.
    
    Args:
        message: The protobuf message to update
        path: Either a dot-separated string path or list of path components
        new_value: The new value to set at the specified path
    
    Returns:
        bool: True if update was successful, False otherwise
    
    Example:
        update_protobuf_value(msg, "person.address.street", "New Street")
        update_protobuf_value(msg, ["person", "address", "street"], "New Street")
    """
    # Convert string path to list if needed
    if isinstance(path, str):
        path_parts = path.split('.')
    else:
        path_parts = path
    
    current = message
    for i, part in enumerate(path_parts):
        # Handle repeated fields
        array_index = None
        if '[' in part and ']' in part:
            part, index_str = part.split('[')
            array_index = int(index_str.rstrip(']'))
            
        # Get field descriptor
        field = current.DESCRIPTOR.fields_by_name.get(part)
        if not field:
            return False
            
        # Handle last part of path (setting the value)
        if i == len(path_parts) - 1:
            try:
                if array_index is not None:
                    # Handle repeated field
                    repeated_field = getattr(current, part)
                    if array_index >= len(repeated_field):
                        return False
                    if field.type == FieldDescriptor.TYPE_MESSAGE:
                        repeated_field[array_index].CopyFrom(new_value)
                    else:
                        repeated_field[array_index] = new_value
                else:
                    # Handle non-repeated field
                    if field.type == FieldDescriptor.TYPE_MESSAGE:
                        getattr(current, part).CopyFrom(new_value)
                    else:
                        setattr(current, part, new_value)
                return True
            except (TypeError, ValueError):
                return False
        
        # Navigate to next level
        if array_index is not None:
            repeated_field = getattr(current, part)
            if array_index >= len(repeated_field):
                return False
            current = repeated_field[array_index]
        else:
            current = getattr(current, part)
    
    return False

# Example usage with a sample protobuf message
def example_usage():
    # Assuming you have a protobuf message like:
    """
    message Person {
        string name = 1;
        Address address = 2;
        repeated PhoneNumber phones = 3;
    }
    
    message Address {
        string street = 1;
        string city = 2;
    }
    
    message PhoneNumber {
        string number = 1;
        PhoneType type = 2;
    }
    """
    
    # Example updates
    update_protobuf_value(person_msg, "name", "John Doe")
    update_protobuf_value(person_msg, "address.street", "123 Main St")
    update_protobuf_value(person_msg, "phones[0].number", "555-1234")
    
    # Using path as list
    update_protobuf_value(person_msg, ["address", "city"], "New York")
