import pandas as pd

# Example DataFrame (replace with your actual DataFrame)
data = {
    'Overall_status': ['Fail', 'Pass', 'Blocked', 'Pending_Delivery', 'Day2'],
    'TC_STATUS': ['Ready_to_Test', 'Ready_to_Test', 'Blocked', 'Pending_Delivery', 'Day2'],
    'PRODUCT_TYPE': ['nonexotic', 'nonexotic', 'nonexotic', 'nonexotic', 'nonexotic'],
    'EVENT_TYPE': ['newt', 'newt', 'newt', 'other', 'other']
}
df = pd.DataFrame(data)

# Define mapping of TC_STATUS to conditions
conditions = {
    'Ready_to_Test': ['Fail', 'Pass'],
    'Blocked': 'Blocked',
    'Pending_Delivery': 'Pending_Delivery',
    'Day2': 'Day2'
}

# Apply conditions to Overall_status
df['Overall_status'] = df.apply(lambda row: row['Overall_status'] if row['TC_STATUS'] in ['Blocked', 'Pending_Delivery', 'Day2'] else 'Fail' if row['Overall_status'] == 'Fail' else 'Pass', axis=1)

# Group by PRODUCT_TYPE and EVENT_TYPE, and count the occurrences of each Overall_status
counts = df.groupby(['PRODUCT_TYPE', 'EVENT_TYPE', 'Overall_status']).size().unstack(-1).fillna(0)

# Convert the result to a dictionary
counts_dict = {}
for product_type, event_type_counts in counts.groupby('PRODUCT_TYPE'):
    counts_dict[product_type] = {}
    for event_type, status_counts in event_type_counts.groupby('EVENT_TYPE'):
        counts_dict[product_type][event_type] = status_counts.to_dict()

# Print the counts
print(counts_dict)
