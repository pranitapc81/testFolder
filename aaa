import pandas as pd

# Example DataFrame (replace with your actual DataFrame)
data = {
    'Overall_status': ['Fail', 'Pass', 'Blocked', 'Pending_Delivery', 'Day2'],
    'TC_STATUS': ['Ready_to_Test', 'Ready_to_Test', 'Blocked', 'Pending_Delivery', 'Day2'],
    'PRODUCT_TYPE': ['nonexotic', 'nonexotic', 'nonexotic', 'nonexotic', 'nonexotic'],
    'EVENT_TYPE': ['newt', 'newt', 'newt', 'other', 'other']
}
df = pd.DataFrame(data)

# Initialize counts dictionary
statuses = ['Fail', 'Pass', 'Blocked', 'Pending_Delivery', 'Day2']
event_types = ['newt', 'other']
product_types = ['nonexotic', 'exotic']

counts = {pt: {et: {status: 0 for status in statuses} for et in event_types} for pt in product_types}

# Define mapping of TC_STATUS to conditions
conditions = {
    'Ready_to_Test': ['Fail', 'Pass'],
    'Blocked': ['Blocked'],
    'Pending_Delivery': ['Pending_Delivery'],
    'Day2': ['Day2']
}

# Filter DataFrame and update counts
for tc_status, valid_statuses in conditions.items():
    valid_statuses = valid_statuses if isinstance(valid_statuses, list) else [valid_statuses]
    for status in valid_statuses:
        mask = (df['TC_STATUS'] == tc_status) & (df['Overall_status'] == status)
        grouped = df[mask].groupby(['PRODUCT_TYPE', 'EVENT_TYPE']).size()
        for (product_type, event_type), count in grouped.items():
            if product_type in counts and event_type in counts[product_type]:
                counts[product_type][event_type][status] += count

# Print the counts
print(counts)
