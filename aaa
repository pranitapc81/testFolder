# test_data_processing.py
import unittest
import pandas as pd
from data_processing import calculate_counts  # Import the function correctly

class TestCalculateCounts(unittest.TestCase):

    def setUp(self):
        # Example DataFrame
        self.data = {
            'Overall_status': ['Fail', 'Pass', 'Blocked', 'Pending_Delivery', 'Day2'],
            'TC_STATUS': ['Ready_to_Test', 'Ready_to_Test', 'Blocked', 'Pending_Delivery', 'Day2'],
            'PRODUCT_TYPE': ['nonexotic', 'nonexotic', 'nonexotic', 'nonexotic', 'nonexotic'],
            'EVENT_TYPE': ['newt', 'newt', 'newt', 'other', 'other']
        }
        self.df = pd.DataFrame(self.data)

    def test_calculate_counts(self):
        expected_counts = {
            'nonexotic': {
                'newt': {'Fail': 1, 'Pass': 1, 'Blocked': 1, 'Pending_Delivery': 0, 'Day2': 0},
                'other': {'Fail': 0, 'Pass': 0, 'Blocked': 0, 'Pending_Delivery': 1, 'Day2': 1}
            },
            'exotic': {
                'newt': {'Fail': 0, 'Pass': 0, 'Blocked': 0, 'Pending_Delivery': 0, 'Day2': 0},
                'other': {'Fail': 0, 'Pass': 0, 'Blocked': 0, 'Pending_Delivery': 0, 'Day2': 0}
            }
        }

        result_counts = calculate_counts(self.df)
        self.assertEqual(result_counts, expected_counts)

if __name__ == '__main__':
    unittest.main()
