from abc import ABC, abstractmethod

class YYValidator(ABC):
    @abstractmethod
    def validate(self, input_value):
        pass

class NumberValidator(YYValidator):
    def validate(self, input_value):
        return isinstance(input_value, (int, float))

class StringLengthValidator(YYValidator):
    def __init__(self, min_length, max_length):
        self.min_length = min_length
        self.max_length = max_length
    
    def validate(self, input_value):
        if isinstance(input_value, str):
            return self.min_length <= len(input_value) <= self.max_length
        return False

# Example Usage
number_validator = NumberValidator()
print(number_validator.validate(10))  # True
print(number_validator.validate("hello"))  # False

string_length_validator = StringLengthValidator(5, 10)
print(string_length_validator.validate("python"))  # True
print(string_length_validator.validate("python is amazing"))  # False
